// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineStoreAPI.Entities;

#nullable disable

namespace OnlineStoreAPI.Migrations
{
    [DbContext(typeof(OnlineStoreDbContext))]
    [Migration("20230530193734_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnlineStoreAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@test.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            Password = "1zKLWDaQVNbhFYJ91a5X7A==;CQJNSBvXQGTquHCLALqJsX3a53GHjYlPUxkq76RnAqM=",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "j.kowalski@test.com",
                            FirstName = "Janusz",
                            LastName = "Kowalski",
                            Password = "KKYcsB+6LavEmyp5spyX5g==;X7ZHbWADvhuh56Z4gUGie0cfZaD+xK+BxcrRZbIp1l8=",
                            Role = 1
                        });
                });

            modelBuilder.Entity("OnlineStoreAPI.Entities.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AddressName")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddresses");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Address = "Admin",
                            AddressName = "Admin",
                            City = "Admin",
                            Country = "Admin",
                            PhoneNumber = "Admin",
                            PostalCode = "Admin",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Test 1/1",
                            AddressName = "main",
                            City = "Warsaw",
                            Country = "Poland",
                            PhoneNumber = "+48 123 456 789",
                            PostalCode = "00-000",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("OnlineStoreAPI.Entities.UserAddress", b =>
                {
                    b.HasOne("OnlineStoreAPI.Entities.User", "User")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineStoreAPI.Entities.User", b =>
                {
                    b.Navigation("UserAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
